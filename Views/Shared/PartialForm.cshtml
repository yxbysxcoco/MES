@using MES.Infrastructure
@using MES.Const
@using MES.Models
@model InputItemsModel
@{ Layout = null; }

<div class="layui-form layui-form-pane" id="iform">
    @foreach (var formItem in Model)
    {
        if (formItem.InputType == SQInputType.InputText)
        {
            <div class="layui-form-item">
                <label class="layui-form-label">@formItem.Alias</label>
                <div class="layui-input-block">
                    @Html.IInput("text", formItem.Alias, formItem.Id, "required")
                </div>
            </div>
        }
        else if (formItem.InputType == SQInputType.InputPW)
        {
            <div class="layui-form-item">
                <label class="layui-form-label">@formItem.Alias</label>
                <div class="layui-input-block">
                    @Html.IInput("password", formItem.Alias, formItem.Id, "required")
                </div>
            </div>
        }
        else if (formItem.InputType == SQInputType.Select)
        {
            <div class="layui-form-item">
                <label class="layui-form-label">@formItem.Alias</label>
                <div class="layui-input-block">
                    <select id="@formItem.Id" name="@formItem.Id" lay-search>
                        <option value="">请选择</option>
                        @foreach (var option in formItem.DataDictionary.Keys)
                        {
                            <option value="@option">@formItem.DataDictionary[option]</option>
                        }
                    </select>
                    <iframe hidden onload="layui.form.render();"></iframe>
                </div>
            </div>
        }
        else if (formItem.InputType == SQInputType.DatePicker)
        {
            <div class="layui-form-item">
                <label class="layui-form-label">@formItem.Alias</label>
                <div class="layui-input-block">
                    @Html.IDatePicker(formItem.Id)
                </div>
            </div>
            <iframe hidden onload="layui.use('laydate', function(){ layui.laydate.render({ elem: '#' + '@formItem.Id' }); });"></iframe>
        }
        else if (formItem.InputType == SQInputType.Button)
        {
            <div class="layui-form-item">
                <div class="layui-input-block">
                    @Html.IButton("", "按钮", "sm", formItem.Id, "handleSearch(1)", "click")
                </div>
            </div>
        }
        <iframe hidden onload="formItems.push('@formItem.Id');"></iframe>
    }
    @Html.IButton("", "新增", "sm", "handleAdd", "showAddPage()", "click")
</div>

<script>
    const showAddPage = () => {
        $("#iaddpage").removeAttr("hidden");
        $("#iform").attr("hidden", "");
        $("#itable").attr("hidden", "");
    }

    const hiddenAddPage = () => {
        $("#itable").removeAttr("hidden");
        $("#iform").removeAttr("hidden");
        $("#iaddpage").attr("hidden", "");
    }

    const getFormData = (list) => {
        let formData = {};
        for (let _i = 0, len = list.length; _i < len; _i++) {
            formData[list[_i]] = $('#' + list[_i]).val();
        }
        return formData;
    }

    const handleSearch = (currentPage) => {
        currentPage = currentPage ? currentPage : 1;
        const entityInfoDic = {
            entityTypeName: '@ViewBag.entityTypeName' 
        };
        const formData = getFormData(formItems);
        Object.assign(entityInfoDic, formData);
        getData({
            url: '@Url.Action("GetDataByField", "Search")' + '/' + currentPage,
            method: 'POST',
            data: { entityInfoDic: entityInfoDic }
        }, res => {
            updateTable(res);
            layui.use('laypage', function () {
                layui.laypage.render({
                    elem: 'pageNav',
                    count: res.TotalCount,
                    curr: res.PageIndex,
                    jump: (obj, first) => {
                        if (!first) {
                            handleSearch(obj.curr);
                        }
                    }
                });
            });
        })
    }

    const updateTable = (res) => {
        let table = $("#tbody");
        table.empty();
        for (var _i = 0, len = res.List.length; _i < len; _i++) {
            let tr = document.createElement("tr");
            for (let _j in res.List[_i]) {
                let td = document.createElement("td");
                td.innerHTML = res.List[_i][_j];
                tr.appendChild(td);
            }
            table.append(tr);
        }
    }
</script>

