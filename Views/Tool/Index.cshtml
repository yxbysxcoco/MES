@{
    Layout = "~/Views/Shared/_MenuLayout.cshtml";
}
<div id="toolIndex">
    <div style="margin: 12px;">
        <Breadcrumb>
            <Breadcrumb-Item>工装管理</Breadcrumb-Item>
            <Breadcrumb-Item>工装Home</Breadcrumb-Item>
        </Breadcrumb>
    </div>
    <Card dis-hover>
        <Row>
            <i-col span="6">
                <i-input v-model="formItem.input" placeholder="输入序号查询"></i-input>
            </i-col>
            <i-col span="3">
                <i-button style="margin-left: 12px;" type="primary" v-on:click="handleSearch">查询</i-button>
            </i-col>
            <i-col span="3">
                <i-button  style="margin-left: 12px" type="default">重置</i-button>
            </i-col>
        </Row>
        <div v-show="!isExt">
            <Divider />
            <div style="text-align: center; cursor: pointer;">
                <Icon type="ios-arrow-down" v-on:click="handleShowExt" />
            </div>
        </div>
        <div v-show="isExt">
            <i-select v-model="formItem.select" style="width: 240px; margin-top: 20px;">
                <i-option value="beijing">New York</i-option>
                <i-option value="shanghai">London</i-option>
                <i-option value="shenzhen">Sydney</i-option>
            </i-select>
            <Row style="margin-top: 20px;">
                <i-col span="6">
                    <date-picker type="date" placeholder="日期选择器" v-model="formItem.date"></date-picker>
                </i-col>
                <i-col span="6">
                    <time-picker type="time" placeholder="时间选择器" v-model="formItem.time"></time-picker>
                </i-col>
            </Row>
            <Divider />
            <Icon type="ios-arrow-up" v-on:click="handleHiddenExt" />
        </div>
    </Card>
    <Card dis-hover style="margin-top: 12px;">
        <i-table border  width="100%" :columns="columns" :data="dataInfo"></i-table>
        <div style="margin: 10px;overflow: hidden">
            <div style="float: right;">
                <Page :total="total"  :current="current"  v-on:on-change="changePage"></Page>
            </div>
        </div>
    </Card>
    <Card dis-hover style="margin-top: 12px;">
        <div id="Line" style="width: 100%;height:400px;"></div>
    </Card>
</div>

<script>
    var vm = new Vue({
        el: "#toolIndex",
        data: {
            msg: "模板",
            isExt: false,
            formItem: {
                input: '',
                select: '',
                date: '',
                time: '',
            },
            current: 1,
            total:10,
            columns: [
                {
                    title: '编码',
                    key: 'Code',
                    fixed: 'left',
                    width: 80
                },
                {
                    title: '版本',
                    key: 'Edition',
                    width: 80
                },
                {
                    title: '名称',
                    key: 'Name',
                    width: 80
                },
                {
                    title: '规格',
                    key: 'Standard',
                    width: 130
                },
                {
                    title: '材质',
                    key: 'MaterialName',
                    width: 80
                },
                {
                    title: '单重',
                    key: 'Weight',
                    width: 80
                },
                {
                    title: '代号',
                    key: 'Mark',
                    width: 80
                },
                {
                    title: '备注',
                    key: 'Remark',
                    width: 80
                },
                {
                    title: '计量单位',
                    key: 'MeterageUnitName',
                    width: 100
                },
                {
                    title: '货币单位',
                    key: 'MoneyUnitName',
                    width: 100
                },
                {
                    title: '单价',
                    key: 'Univalence',
                    width: 80
                },
                {
                    title: '最低库存量',
                    key: 'LowestStock',
                    width: 120
                },
                {
                    title: '最高库存量',
                    key: 'HighestStock',
                    width: 120
                },
                {
                    title: '安全存量',
                    key: 'SaveStock',
                    width: 120
                },
                {
                    title: '默认库房',
                    key: 'StorehouseName',
                    width: 120
                },
                {
                    title: '生产厂家',
                    key: 'Manufacturer',
                    width: 120
                },
                {
                    title: '生产日期',
                    key: 'DateAdded',
                    width: 120
                },
                {
                    title: '出厂编号',
                    key: 'ExitNumber',
                    width: 120
                },
                {
                    title: '检验单位',
                    key: 'InspectionCompany',
                    width: 120
                },
                {
                    title: '最大使用时长',
                    key: 'MaxUseTime',
                    width: 120
                },
                {
                    title: '修理周期',
                    key: 'RepairCycle',
                    width: 120
                },
                {
                    title: '修理次数',
                    key: 'RepairNumber',
                    width: 120
                },
                {
                    title: '供应商',
                    key: 'Supplier',
                    width: 120
                },
            ],
            dataInfo: [
            ],
        },
        methods: {
            handleGetData() {
                axios({
                    method: 'get',
                    url: "http://localhost:51847/ToolEquipment/GetDataByField",
                    data: {
                    }
                }).then((res) => {
                    this.dataInfo = res.data.List;
                    this.total = res.data.TotalCount;
                    console.log(this.total);
                }).catch( (err) => {
                    alert(err);
                });
            },
            // 展示多条件查询
            handleShowExt() {

                this.isExt = true
            },
            // 关闭多条件查询
            handleHiddenExt() {
                this.isExt = false
            },
            // 表格分页
            changePage(index) { 
                axios({
                    method: 'post',
                    url: "http://localhost:51847/ToolEquipment/GetDataByField?page="+index,
                    data: {
                        Code: this.formItem.input,
                        Name: this.formItem.select,
                    }
                }).then((res) => {
                    this.dataInfo = res.data.List;
                    console.log(this.formItem.input);
                }).catch( (err) => {
                    alert(err);
                });
                console.log(index)
            },
            //点击查询按钮
            handleSearch() {
                 axios({
                    method: 'post',
                    url: "http://localhost:51847/ToolEquipment/GetDataByField",
                     data: {
                         Code: this.formItem.input,
                         Name: this.formItem.select,
                    }
                }).then((res) => {
                    this.dataInfo = res.data.List;
                    this.total = res.data.TotalCount;
                }).catch( (err) => {
                    alert(err);
                });              
            }
        },
        mounted() {
            this.handleGetData();
        }
    })
    // 初始化一个echarts实例
    var myChart = echarts.init(document.getElementById('Line'));
    // 随机数生成
    function randomData() {
        now = new Date(+now + oneDay);
        value = value + Math.random() * 21 - 10;
        return {
            name: now.toString(),
            value: [
                [now.getFullYear(), now.getMonth() + 1, now.getDate()].join('-'),
                Math.round(value)
            ]
        }
    }
    var now = +new Date(1997, 9, 3);
    var oneDay = 24 * 3600 * 1000;
    var value = Math.random() * 1000;
    var data = [];
    var data1 = [];
    for (var i = 0; i < 1000; i++) {
        data.push(randomData());
        data1.push(randomData())
    }
    // echarts配置文件
    option = {
        title: {
            text: '动态数据示例'
        },
        grid: {
            top: 40,
            bottom: 80
        },
        dataZoom: [
            {
                show: true,
                realtime: true,
                start: 80,
                end: 100
            },
            {
                type: 'inside',
                realtime: true,
                start: 80,
                end: 100
            }
        ],
        legend: {
            data:['模拟数据1', '模拟数据2'],
            selectedMode: 'single',
            itemWidth:10,  //图例标记的图形宽度
            itemHeight:1, //图例标记的图形高度
        },
        tooltip: {
            trigger: 'axis',
            formatter: function (params) {
                params = params[0];
                var date = new Date(params.name);
                return date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear() + ' : ' + params.value[1];
            },
            axisPointer: {
                animation: false
            }
        },
        xAxis: {
            type: 'time',
            splitLine: {
                show: false
            }
        },
        yAxis: {
            type: 'value',
            boundaryGap: [0, '100%'],
            splitLine: {
                show: false
            }
        },
        series: [
            {
                name: '模拟数据1',
                type: 'line',
                showSymbol: false,
                hoverAnimation: false,
                data: data
            },
            {
                name: '模拟数据2',
                type: 'line',
                showSymbol: false,
                hoverAnimation: false,
                data: data1
            },
        ]
    };
    myChart.setOption(option);
    // 定时器，每一秒钟更新一次图表
    setInterval(function () {
        for (var i = 0; i < 5; i++) {
            data.shift();
            data.push(randomData());
        }
        for (var j = 0; j < 5; j++) {
            data1.shift();
            data1.push(randomData());
        }
        myChart.setOption({
            series: [
                {
                    name: '模拟数据1',
                    data: data
                },
                {
                    name: '模拟数据2',
                    data: data1
                }
            ]
        });
    }, 1000);
</script>