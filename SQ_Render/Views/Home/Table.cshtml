@using SQ_Render.Models.View
@using SQ_Render.Const
@model AbstractElement

<div class="container row">
    <div class="col s8 offset-s2">
        @Html.Render(Model)
    </div>
</div>
<script>
    var pageIndex = 1
    var total = 10
    var size = 10
    window.onload = function () {
        let count = document.getElementById("tbody").childElementCount
        let tableList = document.getElementById("tbody").childNodes
        function refush() {
            for (let i = 0; i < count; i++) {
                tableList[i].setAttribute("hidden", "")
            }
            for (let i = pageIndex * 10 - 10; i < pageIndex * 10; i++) {
                if(tableList[i]) tableList[i].removeAttribute("hidden")
            }
        }
        refush();
        let page = document.getElementById("page");
        console.log(page);
        let toRight = page.childNodes[1];
        let toLeft = page.childNodes[0];
        let i = Math.ceil(count / size)
        let j = i
        while (i--) {
            let x = j - i
            if (j - i !== pageIndex) {
                let li = document.createElement("li");
                li.setAttribute("class", "waves-effect")
                li.innerHTML = "<a href='#!'>" + (j - i) + "</a>"
                li.addEventListener("click", function () {
                    pageIndex = x
                    for (let z of page.childNodes) {
                        z.removeAttribute("class")
                        z.setAttribute("class", "waves-effect")
                    }
                    page.childNodes[pageIndex].classList.add('active')
                    refush()
                })
                page.insertBefore(li, toRight)
                continue
            }
            let li = document.createElement("li");
            li.setAttribute("class", "waves-effect active")
            li.innerHTML = "<a href='#!'>" + (j - i) + "</a>"
            li.addEventListener("click", function () {
                pageIndex = x
                for (let z of page.childNodes) {
                    z.removeAttribute("class")
                    z.setAttribute("class", "waves-effect")
                }
                page.childNodes[x].classList.add('active')
                refush()
            })
            page.insertBefore(li, toRight)
        }
        toRight.addEventListener("click", function () {
            if (pageIndex > j - 1) {
                
            } else {
                page.childNodes[pageIndex].classList.remove('active')
                page.childNodes[pageIndex + 1].classList.add('active')
                pageIndex++
            }
            refush()
        })
        toLeft.addEventListener("click", function () {
            if (pageIndex < 2) {
                
            } else {
                page.childNodes[pageIndex].classList.remove('active')
                page.childNodes[pageIndex - 1].classList.add('active')
                pageIndex--
            }
            refush()
        })
    }
</script>